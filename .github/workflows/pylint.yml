name: Code Quality

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install project dependencies to avoid import errors
        pip install -r requirements.txt
        pip install pylint
        
    - name: Check formatting with Ruff
      run: |
        # Check if code is formatted properly
        ruff format --check --diff .
        
    - name: Lint with Ruff
      run: |
        # Run ruff linting (fast replacement for flake8)
        ruff check .
        
    - name: Lint with pylint
      run: |
        # Run pylint with a reasonable threshold (8.0/10)
        # This allows for minor issues while catching serious problems
        pylint --fail-under=8.0 --disable=line-too-long,too-many-lines $(git ls-files '*.py')
        
    - name: Display pylint score
      if: always()
      run: |
        echo "Current pylint score:"
        pylint --score=y --disable=line-too-long,too-many-lines $(git ls-files '*.py') || true
